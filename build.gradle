plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.backend.com'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// Spring Boot 
    implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

  
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// MySQL & H2
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'com.h2database:h2'

  // JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //implementation 'org.hibernate:hibernate-core:6.0.0.Final'
 	

	// querydsl
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

 	//Jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
 
 	//security
 	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	
	// Swagger/OpenAPI (Swagger UI & Documentation)
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
	
	 // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
	
	
	//redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
	
	
	// 테스트 관련
 	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testImplementation 'org.springframework.security:spring-security-test'
  }


def querydslDir = "$buildDir/generated/querydsl"


sourceSets {
    main {
        java.srcDirs += querydslDir
    }
}

tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorGeneratedSourcesDirectory = file("build/generated/querydsl")
}

tasks.register('cleanGeneratedSources', Delete) {
    delete querydslDir
}